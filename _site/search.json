[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "School Context Opportuntity Score",
    "section": "",
    "text": "Service to Our State and Beyond\n\nThe School Context Opportunity Score (SCOscore) is a measure of potentiality for learners in a school community. It is a composite score that combines multiple factors, particularly structural factors such as race and SES, as well as performance factors such as test scores and graduation pathway completion rates, to provide a more holistic view of school corporations.\nThe SCOscore was developed as method for identifying and prioritizing P12 schools and school corporations for the Indiana University Indianapolis 2030 Strategic Plan. Specifically, SCOscore was developed for Goal 2 of the Service to Our State and Beyond Pillar:\n\nEngage State P-12 to Strengthen Education and Educational Pipelines in Indiana"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html#loading-libraries",
    "href": "index.html#loading-libraries",
    "title": "School Context Opportuntity Score",
    "section": "Loading Libraries",
    "text": "Loading Libraries\nLibraries are packages that are loaded in to extend the functionality to the base R programming language. The following libraries are utilized:\n\n\nreadr (Wickham, Hester, and Bryan 2023) allows for efficient and straightforward reading and writing of local CSV files;\n\nhere (Müller 2020) provides a simple way to find files in folders;\n\nopenxlsx (Schauberger and Walker 2023) provides R with the functionality to write and read Microsoft Excel (.xlsx) files;\n\nglue (Hester and Bryan 2022), tidyr (Wickham, Vaughan, and Girlich 2023), dplyr (Wickham et al. 2023), and stringr (Wickham 2022) are used to process and clean data;\n\nshowtext (Qiu and software 2023) allows Google Fonts to be loaded and displayed.\n\n\nlibrary(readr)\nlibrary(here)\nlibrary(openxlsx)\nlibrary(glue)\nlibrary(tidyr)\nlibrary(dplyr)\nlibrary(stringr)\nlibrary(showtext)"
  },
  {
    "objectID": "index.html#pre-data-prepartion-and-cleaning",
    "href": "index.html#pre-data-prepartion-and-cleaning",
    "title": "SCOscore Documentation",
    "section": "Pre-Data Prepartion and Cleaning",
    "text": "Pre-Data Prepartion and Cleaning\nBlah.\n\nGraduation Rates\n\nGraduation Rates spreadsheet format.\n\n\ncorp_id\ncorp_name\nschool_id\nschool_name\ngrad_rate\n\n\n\n\nnumber\ntext\nnumber\ntext\npercent"
  },
  {
    "objectID": "index.html#pre-data-preparation-and-cleaning",
    "href": "index.html#pre-data-preparation-and-cleaning",
    "title": "School Context Opportuntity Score",
    "section": "Pre-Data Preparation and Cleaning",
    "text": "Pre-Data Preparation and Cleaning\nBlah.\nIREAD-3 Test Scores\nBlah.\n\nGraduation Rates spreadsheet format.\n\ncorp_id\ncorp_name\nschool_id\nschool_name\niread_rate\n\n\nnumber\ntext\nnumber\ntext\npercent\n\nILEARN-6 Math Scores\nBlah.\n\nGraduation Rates spreadsheet format.\n\ncorp_id\ncorp_name\nschool_id\nschool_name\nilearn_rate\n\n\nnumber\ntext\nnumber\ntext\npercent\n\nHigh School Graduation Rates\n\nGraduation Rates spreadsheet format.\n\ncorp_id\ncorp_name\nschool_id\nschool_name\ngrad_rate\n\n\nnumber\ntext\nnumber\ntext\npercent"
  },
  {
    "objectID": "index.html#read-files",
    "href": "index.html#read-files",
    "title": "SCOscore Documentation",
    "section": "Read Files",
    "text": "Read Files\n\nilearn_frame &lt;- read_csv(here(\"data\", \"in-school-ilearn6.csv\")) |&gt;\n  mutate(ilearn_rate = case_when(\n    ilearn_rate == \"***\" ~ NA,\n    ilearn_rate == \"\" ~ NA,\n    TRUE ~ ilearn_rate\n  )) |&gt;\n  na.omit() |&gt;\n  mutate(ilearn_rate = as.numeric(str_sub(ilearn_rate, end = -2)) / 100)\n  \nilearn_frame\n\n# A tibble: 879 × 5\n   corp_id corp_name                        school_id school_name    ilearn_rate\n     &lt;dbl&gt; &lt;chr&gt;                            &lt;chr&gt;     &lt;chr&gt;                &lt;dbl&gt;\n 1      15 Adams Central Community Schools  13        Adams Central…       0.64 \n 2      25 North Adams Community Schools    33        Bellmont Midd…       0.284\n 3      35 South Adams Schools              17        South Adams M…       0.351\n 4     125 MSD Southwest Allen County Schls 63        Summit Middle…       0.454\n 5     125 MSD Southwest Allen County Schls 67        Woodside Midd…       0.409\n 6     225 Northwest Allen County Schools   79        Maple Creek M…       0.488\n 7     225 Northwest Allen County Schools   90        Carroll Middl…       0.319\n 8     235 Fort Wayne Community Schools     107       Blackhawk Mid…       0.421\n 9     235 Fort Wayne Community Schools     118       Jeff H Towles…       0.176\n10     235 Fort Wayne Community Schools     119       Jefferson Mid…       0.359\n# ℹ 869 more rows\n\n\nThis is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html#read-and-process-data-files",
    "href": "index.html#read-and-process-data-files",
    "title": "School Context Opportuntity Score",
    "section": "Read and Process Data Files",
    "text": "Read and Process Data Files\nThe data files need to be read in to R and processed in a consistent manner so that School Context Opportunity Scores can be calculated successfully.\nLEA ID-School Corporation ID Crosswalk\nThe Urban Centric Locale data is set by the Federal, rather than the Indiana, Department of Education. The Federal DOE utilizes a standardized LEA ID while the IDOE utilizes their own School Corporation ID.\nThis code block creates a crosswalk to bridge the DOE’s LEA ID and the IDOE’s School Corporation ID.\n\n#   ____________________________________________________________________________\n#   Create Federal-IDOE Crosswalk                                           ####\n##  ............................................................................\n##  Load Locale File                                                        ####\n##  The Locale File is directly from a Federal DOE database and includes\n##  the Federal LEA ID codes, rather than the Indiana DOE School\n##  Corporation codes. lea_name is renamed to corp_name for consistency.\nlocale_frame &lt;- read_csv(\n  here(\n    \"data\",\n    glue(\"{focus_year}-in-school-corp-locale.csv\")\n  )\n) |&gt;\n  rename(corp_name = lea_name)\n\n##  ............................................................................\n##  Load IREAD File                                                         ####\n##  The IREAD File contains, on the otherhand, the Indiana DOE School\n##  Corporation codes, but not the Federal DOE LEA codes.\niread_frame &lt;- read_csv(\n  here(\n    \"data\",\n    glue(\"{focus_year}-in-school-iread3.csv\")\n  )\n)\n\n##  ............................................................................\n##  Create Crosswalk Frame                                                  ####\n##  The two dataframes are joined together by matching the School\n##  Corporation name so that the IDOE and USDOE codes match. This can be\n##  used to allow different sources of data sets to align with one another.\ncrosswalk_frame &lt;- iread_frame |&gt;\n  select(-iread_rate) |&gt;\n  full_join(locale_frame, by = \"corp_name\") |&gt;\n  na.omit() |&gt;\n  select(corp_id, school_id, leaid)\n\nUrban-Centric Locale\nThe National Center for Education Statistics provides a framework for recognizing the “locale” of a school corporation, from city to suburb to town to rural. The framework is the Urban-Centric Locale Categories, and the school corporation designations are included here for accountability purposes.\n\n#   ____________________________________________________________________________\n#   Process Locale Frame                                                    ####\n#   Processing on the locale frame is completed by adding the IDOE\n#   identifiers on to the frame and ensuring the School ID and School\n#   Corporation ID columns are numeric for consistency.\nlocale_frame &lt;- locale_frame |&gt;\n  full_join(crosswalk_frame, by = \"leaid\") |&gt;\n  select(-leaid) |&gt;\n  set_numeric_ids()\n\nDemographics\nDemographic indicators—specifically the percentage of students who are a part of underrepresented racial minority communities and the percentage of students who receive free and reduced lunch—are critical components of the School Context Opportunity Score. They provide a measure of the potentiality of students who are often held back because of existing structural barriers and inequalities.\n\n#   ____________________________________________________________________________\n#   Load and Process Demographics File                                      ####\n##  ............................................................................\n##  Load Demographics File                                                  ####\n##  The Demographics File is loaded and any blank or \"omitted\" (\"***\")\n##  values are replaced with NA for easier processing.\nread_demographics_frame &lt;-\n  read_csv(here(\"data\", glue(\"{focus_year}-in-school-demographics.csv\")),\n    col_names = TRUE,\n    na = c(\"\", \"***\")\n  ) |&gt;\n  ##  The Crosswalk Frame is used to only retain the school corporations that\n  ##  are of interest (excluding private, charter, etc., schools) and that\n  ##  consistently report data and are fully accountable to the communities\n  ##  they serve.\n  filter(corp_id %in% crosswalk_frame$corp_id) |&gt;\n  ##  Any NA is then replaced with 0 in the demographics columns.\n  mutate(across(\n    .cols = aina:nhpi,\n    .fns = ~ if_else(is.na(.x) == TRUE, 0, .x)\n  ))\n\n##  ............................................................................\n##  Process Demographics Frame                                              ####\n##  An \"underrepresented racial minority\" column is created by calculating\n##  the proportion of non-white students in the school. Similarly, a Free\n##  and Reduced Lunch proportion is also calculated.\nprocess_demographics_frame &lt;- read_demographics_frame |&gt;\n  mutate(\n    urm_percent =\n      (aina +\n        asian +\n        black +\n        latine +\n        multiracial +\n        nhpi) /\n        enrollment\n  ) |&gt;\n  mutate(\n    frl_percent = frl / enrollment\n  )\n\n##  ............................................................................\n##  Finalize Demographics Frame                                             ####\n##  Keep only the necessary columns in the dataframe and convert all ID\n##  columns to numeric for consistency.\ndemographics_frame &lt;- process_demographics_frame |&gt;\n  select(\n    corp_id,\n    corp_name,\n    school_id,\n    school_name,\n    urm_percent,\n    frl_percent\n  ) |&gt;\n  prune_frame() |&gt;\n  set_numeric_ids()\n\n##  ............................................................................\n##  Calculate Demographic Means                                             ####\n##  Means for the demographic categories-underrepresented racial minorities and\n##  free and reduced lunch-are calculated for future use in the counterfactual\n##  analysis.\nurm_percent_mean &lt;- round(mean(demographics_frame$urm_percent), 3)\nfrl_percent_mean &lt;- round(mean(demographics_frame$frl_percent), 3)\n\n3rd Grade IREAD\n\n#   ____________________________________________________________________________\n#   Load and Process IREAD File                                             ####\n##  ............................................................................\n##  Load IREAD File                                                         ####\n## \nread_iread_frame &lt;- read_csv(\n  here(\n    \"data\",\n    glue(\"{focus_year}-in-school-iread3.csv\")\n  ),\n  na = c(\"\", \"***\")\n) |&gt;\n  prune_frame() |&gt;\n  set_numeric_ids()\n\n##  ............................................................................\n##  Calculate IREAD Rates                                                   ####\niread_frame &lt;- read_iread_frame |&gt;\n  mutate(iread_rate = as.numeric(str_sub(iread_rate, end = -2)) / 100)\n\n##  ............................................................................\n##  Calculate IREAD Mean                                                    ####\niread_mean &lt;- round(mean(iread_frame$iread_rate), 3)\n\n6th Grade ILEARN\n\n#   ____________________________________________________________________________\n#   Load and Process ILEARN File                                            ####\n##  ............................................................................\n##  Load ILEARN File                                                        ####\nread_ilearn_frame &lt;- read_csv(\n  here(\n    \"data\",\n    glue(\"{focus_year}-in-school-ilearn6.csv\")\n  ),\n  na = c(\"\", \"***\")\n) |&gt;\n  prune_frame() |&gt;\n  set_numeric_ids()\n\n##  ............................................................................\n##  Calculate ILEARN Rates                                                  ####\nilearn_frame &lt;- read_ilearn_frame |&gt;\n  mutate(ilearn_rate = as.numeric(str_sub(ilearn_rate, end = -2)) / 100)\n\n##  ............................................................................\n##  Calculate ILEARN Mean                                                   ####\nilearn_mean &lt;- round(mean(ilearn_frame$ilearn_rate), 3)\n\nGraduation Pathways Completion\n\n#   ____________________________________________________________________________\n#   Load and Process Graduation Pathways Completion File                    ####\n##  ............................................................................\n##  Load Graduation Pathways Completion File                                ####\nread_grad_frame &lt;- read_csv(\n  here(\n    \"data\",\n    glue(\"{focus_year}-in-school-gcr.csv\")\n  ),\n  na = c(\"\", \"***\")\n) |&gt;\n  prune_frame() |&gt;\n  set_numeric_ids()\n\n##  ............................................................................\n##  Process Graduation Completion Rates File                                ####\ngrad_frame &lt;- read_grad_frame |&gt;\n  mutate(grad_rate = as.numeric(str_sub(grad_rate, end = -2)) / 100)\n\n##  ............................................................................\n##  Calculate Graduate Pathways Completion Rate Mean                        ####\ngrad_mean &lt;- round(mean(grad_frame$grad_rate), 3)"
  },
  {
    "objectID": "index.html#calculate-scoscore",
    "href": "index.html#calculate-scoscore",
    "title": "School Context Opportuntity Score",
    "section": "Calculate SCOscore",
    "text": "Calculate SCOscore\n\nscoscore_frame &lt;- locale_frame |&gt;\n  full_join(\n    demographics_frame,\n    by = c(\"corp_id\", \"school_id\"),\n    suffix=c(\"\",\".y\")) |&gt;\n  full_join(\n    iread_frame,\n    by = c(\"corp_id\", \"school_id\"),\n    suffix=c(\"\",\".y\")) |&gt;\n  full_join(\n    ilearn_frame,\n    by = c(\"corp_id\", \"school_id\"),\n    suffix=c(\"\",\".y\")) |&gt;\n  full_join(\n    grad_frame,\n    by = c(\"corp_id\", \"school_id\"),\n    suffix=c(\"\",\".y\")) |&gt;\n  select(-ends_with(\".y\")) |&gt;\n  filter(!is.na(corp_name)) |&gt;\n  mutate(iread_rate_adj = as.numeric(if_else(\n    iread_rate &lt; state_3rd_proficiency,\n    (state_3rd_proficiency - iread_rate + 1),\n    0\n  ))) |&gt;\n  mutate(ilearn_rate_adj = as.numeric(if_else(\n    ilearn_rate &lt; state_6th_proficiency,\n    (state_6th_proficiency - ilearn_rate + 1),\n    0\n  ))) |&gt;\n  mutate(grad_rate_adj = as.numeric(if_else(\n    grad_rate &lt; state_gpc,\n    (state_gpc - grad_rate + 1),\n    0\n  ))) |&gt;\n  rowwise() |&gt;\n  mutate(\n    adj_academic = round(\n      mean(\n        c(iread_rate_adj, ilearn_rate_adj, grad_rate_adj),\n        na.rm = TRUE),\n    3)) |&gt;\n  ungroup() |&gt;\n  select(\n    -contains(c(\n      \"iread\",\n      \"ilearn\",\n      \"grad\"))) |&gt;\n  mutate(\n    scoScore = (\n      ((urm_percent * 1.5) + (frl_percent * 1.5) + (adj_academic)) / 3\n    )\n  ) |&gt;\n  mutate(rounded_up = if_else(\n    scoScore &lt; 1 & scoScore &gt;= 0.970,\n    TRUE,\n    FALSE\n  )) |&gt;\n  mutate(scoScore = if_else(\n    scoScore &lt; 1 & scoScore &gt;= 0.970,\n    1,\n    scoScore\n  )) |&gt;\n  na.omit() |&gt;\n  mutate(counter_factual = FALSE)\n\nConduct a counterfactual analysis to ensure fairness for school corporations. If a school corporation has an adjusted academic score above mean academic score + 1 standard deviation then adjust the non-white and free and reduced lunch percents to the state average if these are lower than the state mean. This gives some school corporations a little “bump” so that it cannot be said that any group is given an “unfair” advantage. If the newly calculated SCOscore is then &gt;=1, then keep that counterfactual score.\n\nadj_ac_mean &lt;- round(\n  mean(scoscore_frame$adj_academic),\n  3)\nadj_ac_sd &lt;- round(\n  sd(scoscore_frame$adj_academic),\n  3)\nadj_ac_cutoff &lt;- adj_ac_mean + adj_ac_sd\n\nwhatif_frame &lt;- scoscore_frame |&gt;\n  filter(adj_academic &gt;= adj_ac_cutoff) |&gt;\n  filter(scoScore &lt; 1) |&gt;\n  select(-scoScore) |&gt;\n  mutate(urm_percent = ifelse(\n    urm_percent &lt; urm_percent_mean,\n    urm_percent_mean,\n    urm_percent\n  )) |&gt;\n  mutate(frl_percent = ifelse(\n    frl_percent &lt; frl_percent_mean,\n    frl_percent_mean,\n    frl_percent\n  )) |&gt;\n  mutate(\n    scoScore = (\n      ((urm_percent * 1.5) + (frl_percent * 1.5) + (adj_academic)) / 3\n    )\n  ) |&gt;\n    mutate(\n    scoScore = round(scoScore, 3)\n  ) |&gt;\n    mutate(rounded_up = if_else(\n    scoScore &lt; 1 & scoScore &gt;= 0.970,\n    TRUE,\n    FALSE\n  )) |&gt;\n  mutate(scoScore = if_else(\n    scoScore &lt; 1 & scoScore &gt;= 0.970,\n    1,\n    scoScore\n  )) |&gt;\n     filter(\n    scoScore &gt;= 1\n  ) |&gt;\n  mutate(\n    counter_factual = TRUE\n  ) |&gt;\n  select(\n    corp_id,\n    school_id,\n    scoScore,\n    rounded_up,\n    counter_factual\n  )\n\nscoscore_frame &lt;- scoscore_frame |&gt;\n  left_join(\n    whatif_frame,\n    by = c(\"corp_id\", \"school_id\")\n    ) |&gt;\n  mutate(counter_factual = if_else(!is.na(counter_factual.y),\n                                   counter_factual.y,\n                                   counter_factual.x)) |&gt;\n  mutate(rounded_up = if_else(!is.na(rounded_up.y),\n                                   rounded_up.y,\n                                   rounded_up.x)) |&gt;\n  mutate(scoScore = if_else(!is.na(scoScore.y),\n                                   scoScore.y,\n                                   scoScore.x)) |&gt;\n  select(-(ends_with(c(\".x\", \".y\"))))\n\n\nscoscore_frame &lt;- scoscore_frame |&gt;\n  select(\n    corp_id,\n    school_id,\n    corp_name,\n    school_name,\n    urban_centric_locale,\n    urm_percent,\n    frl_percent,\n    adj_academic,\n    scoScore,\n    rounded_up,\n    counter_factual\n  ) |&gt;\n  arrange(\n    corp_id,\n    school_id\n  )\n\nwrite.xlsx(\n  scoscore_frame,\n  here(\n    \"output\",\n    glue(\"{focus_year}-in-scoscore-schools.xlsx\")\n  ),\n  colNames = TRUE\n)"
  },
  {
    "objectID": "index.html#session-information",
    "href": "index.html#session-information",
    "title": "School Context Opportuntity Score",
    "section": "Session Information",
    "text": "Session Information\nSession information is provided for reproducibility purposes.\n\nsessioninfo::session_info(pkgs = \"attached\")\n\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.3.1 (2023-06-16)\n os       macOS Sonoma 14.0\n system   aarch64, darwin20\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       America/Indiana/Indianapolis\n date     2023-10-15\n pandoc   3.1.8 @ /opt/homebrew/bin/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package    * version date (UTC) lib source\n dplyr      * 1.1.3   2023-09-03 [1] CRAN (R 4.3.0)\n glue       * 1.6.2   2022-02-24 [1] CRAN (R 4.3.0)\n here       * 1.0.1   2020-12-13 [1] CRAN (R 4.3.0)\n openxlsx   * 4.2.5.2 2023-02-06 [1] CRAN (R 4.3.0)\n readr      * 2.1.4   2023-02-10 [1] CRAN (R 4.3.0)\n showtext   * 0.9-6   2023-05-03 [1] CRAN (R 4.3.0)\n showtextdb * 3.0     2020-06-04 [1] CRAN (R 4.3.0)\n stringr    * 1.5.0   2022-12-02 [1] CRAN (R 4.3.0)\n sysfonts   * 0.8.8   2022-03-13 [1] CRAN (R 4.3.0)\n tidyr      * 1.3.0   2023-01-24 [1] CRAN (R 4.3.0)\n\n [1] /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/library\n\n──────────────────────────────────────────────────────────────────────────────"
  },
  {
    "objectID": "index.html#set-functions",
    "href": "index.html#set-functions",
    "title": "School Context Opportuntity Score",
    "section": "Set Functions",
    "text": "Set Functions\n\nprune_frame &lt;- function(working_frame) {\n  working_frame &lt;- working_frame |&gt;\n    na.omit() |&gt;\n    filter(corp_id %in% crosswalk_frame$corp_id)\n  return(working_frame)\n}\n\n\nset_numeric_ids &lt;- function(working_frame) {\n  working_frame &lt;- working_frame |&gt;\n    mutate(\n      corp_id = as.numeric(corp_id)\n    ) |&gt;\n    mutate(\n      school_id = as.numeric(school_id)\n    )\n  return(working_frame)\n}"
  },
  {
    "objectID": "index.html#file-structure",
    "href": "index.html#file-structure",
    "title": "School Context Opportuntity Score",
    "section": "File Structure",
    "text": "File Structure\nfafi-sna/\n┣ assets/                   &lt;- Directory for storing auxiliary files\n┃ ┗ fafi-sna-references.bib &lt;- Bibliography for this project in BibTeX format\n┃ ┗ theme.css               &lt;- Cascading style sheet for the project\n┃ ┗ fafi-sna-logo.png       &lt;- Project logo\n┃ ┗ credit.xml              &lt;- Author contributions in a JATS XML file\n┣ docs/                     &lt;- Directory for the rendered literate programming file\n┃ ┗ index.html              &lt;- Rendered version of the literate programming file\n┣ index_cache/              &lt;- Directory used to serve the rendered literate programming file\n┣ index_files/              &lt;- Directory used to serve the rendered literate programming file\n┣ output/                   &lt;- Target directory for collecting R output files\n┃ ┗ plots/                  &lt;- Directory for storing plots in PDF and PNG formats\n┃ ┗ csv/                    &lt;- Directory for storing CSV files\n┣ R                         &lt;- Directory for storing R scripts\n┃ ┗ fafi-sna.R              &lt;- R script distilled from the literate programming file\n┣ .gitignore                &lt;- Files and directories to be ignored by Git\n┣ .nojekyll                 &lt;- File to tell Github to not use Jekyll\n┣ _footer.html              &lt;- The footer for the rendered literate programming file\n┣ _site.yml                 &lt;- Configuration file for the rendered literate programming file\n┣ CODE_OF_CONDUCT.md        &lt;- Code of Conduct for project contributors\n┣ LICENSE                   &lt;- License (MIT) for project\n┣ README.md                 &lt;- This file, a general overview of this project\n┗ index.Rmd                 &lt;- Literate programming file for the project analysis"
  },
  {
    "objectID": "index.html#land-acknowledgement",
    "href": "index.html#land-acknowledgement",
    "title": "School Context Opportuntity Score",
    "section": "Land Acknowledgement",
    "text": "Land Acknowledgement\nIndiana University Indianapolis acknowledges our location on the traditional and ancestral territory of the Miami, Potawatomi and Shawnee people. We honor the heritage of Native peoples, what they teach us about the stewardship of the earth and their continuing efforts today to protect the planet.\nFounded in 1969, Indiana University Indianapolis stands on the historic homelands of Native peoples and, more recently, that of a vibrant Black community, also displaced. As the present stewards of the land, we honor them all as we live, work and study at Indiana University Indianapolis."
  },
  {
    "objectID": "CODE_OF_CONDUCT.html",
    "href": "CODE_OF_CONDUCT.html",
    "title": "Contributor Covenant Code of Conduct",
    "section": "",
    "text": "We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.\nWe pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.\n\n\n\nExamples of behavior that contributes to a positive environment for our community include:\n\nDemonstrating empathy and kindness toward other people\nBeing respectful of differing opinions, viewpoints, and experiences\nGiving and gracefully accepting constructive feedback\nAccepting responsibility and apologizing to those affected by our mistakes, and learning from the experience\nFocusing on what is best not just for us as individuals, but for the overall community\n\nExamples of unacceptable behavior include:\n\nThe use of sexualized language or imagery, and sexual attention or advances of any kind\nTrolling, insulting or derogatory comments, and personal or political attacks\nPublic or private harassment\nPublishing others’ private information, such as a physical or email address, without their explicit permission\nOther conduct which could reasonably be considered inappropriate in a professional setting\n\n\n\n\nCommunity leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.\nCommunity leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.\n\n\n\nThis Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.\n\n\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at jfprice@iu.edu. All complaints will be reviewed and investigated promptly and fairly.\nAll community leaders are obligated to respect the privacy and security of the reporter of any incident.\n\n\n\nCommunity leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:\n\n\nCommunity Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.\nConsequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.\n\n\n\nCommunity Impact: A violation through a single incident or series of actions.\nConsequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.\n\n\n\nCommunity Impact: A serious violation of community standards, including sustained inappropriate behavior.\nConsequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.\n\n\n\nCommunity Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.\nConsequence: A permanent ban from any sort of public interaction within the community.\n\n\n\n\nThis Code of Conduct is adapted from the Contributor Covenant, version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\nCommunity Impact Guidelines were inspired by Mozilla’s code of conduct enforcement ladder.\nFor answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations."
  },
  {
    "objectID": "CODE_OF_CONDUCT.html#our-pledge",
    "href": "CODE_OF_CONDUCT.html#our-pledge",
    "title": "Contributor Covenant Code of Conduct",
    "section": "",
    "text": "We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.\nWe pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community."
  },
  {
    "objectID": "CODE_OF_CONDUCT.html#our-standards",
    "href": "CODE_OF_CONDUCT.html#our-standards",
    "title": "Contributor Covenant Code of Conduct",
    "section": "",
    "text": "Examples of behavior that contributes to a positive environment for our community include:\n\nDemonstrating empathy and kindness toward other people\nBeing respectful of differing opinions, viewpoints, and experiences\nGiving and gracefully accepting constructive feedback\nAccepting responsibility and apologizing to those affected by our mistakes, and learning from the experience\nFocusing on what is best not just for us as individuals, but for the overall community\n\nExamples of unacceptable behavior include:\n\nThe use of sexualized language or imagery, and sexual attention or advances of any kind\nTrolling, insulting or derogatory comments, and personal or political attacks\nPublic or private harassment\nPublishing others’ private information, such as a physical or email address, without their explicit permission\nOther conduct which could reasonably be considered inappropriate in a professional setting"
  },
  {
    "objectID": "CODE_OF_CONDUCT.html#enforcement-responsibilities",
    "href": "CODE_OF_CONDUCT.html#enforcement-responsibilities",
    "title": "Contributor Covenant Code of Conduct",
    "section": "",
    "text": "Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.\nCommunity leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate."
  },
  {
    "objectID": "CODE_OF_CONDUCT.html#scope",
    "href": "CODE_OF_CONDUCT.html#scope",
    "title": "Contributor Covenant Code of Conduct",
    "section": "",
    "text": "This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event."
  },
  {
    "objectID": "CODE_OF_CONDUCT.html#enforcement",
    "href": "CODE_OF_CONDUCT.html#enforcement",
    "title": "Contributor Covenant Code of Conduct",
    "section": "",
    "text": "Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at jfprice@iu.edu. All complaints will be reviewed and investigated promptly and fairly.\nAll community leaders are obligated to respect the privacy and security of the reporter of any incident."
  },
  {
    "objectID": "CODE_OF_CONDUCT.html#enforcement-guidelines",
    "href": "CODE_OF_CONDUCT.html#enforcement-guidelines",
    "title": "Contributor Covenant Code of Conduct",
    "section": "",
    "text": "Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:\n\n\nCommunity Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.\nConsequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.\n\n\n\nCommunity Impact: A violation through a single incident or series of actions.\nConsequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.\n\n\n\nCommunity Impact: A serious violation of community standards, including sustained inappropriate behavior.\nConsequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.\n\n\n\nCommunity Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.\nConsequence: A permanent ban from any sort of public interaction within the community."
  },
  {
    "objectID": "CODE_OF_CONDUCT.html#attribution",
    "href": "CODE_OF_CONDUCT.html#attribution",
    "title": "Contributor Covenant Code of Conduct",
    "section": "",
    "text": "This Code of Conduct is adapted from the Contributor Covenant, version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\nCommunity Impact Guidelines were inspired by Mozilla’s code of conduct enforcement ladder.\nFor answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations."
  },
  {
    "objectID": "index.html#load-libraries",
    "href": "index.html#load-libraries",
    "title": "School Context Opportuntity Score",
    "section": "Load Libraries",
    "text": "Load Libraries\nLibraries are packages that are loaded in to extend the functionality to the base R programming language. The following libraries are utilized:\n\n\nreadr (Wickham, Hester, and Bryan 2023) allows for efficient and straightforward reading and writing of local CSV files;\n\nhere (Müller 2020) provides a simple way to find files in folders;\n\nopenxlsx (Schauberger and Walker 2023) provides R with the functionality to write and read Microsoft Excel (.xlsx) files;\n\nglue (Hester and Bryan 2022), tidyr (Wickham, Vaughan, and Girlich 2023), dplyr (Wickham et al. 2023), and stringr (Wickham 2022) are used to process and clean data;\n\nshowtext (Qiu and software 2023) allows Google Fonts to be loaded and displayed.\n\n\nlibrary(readr)\nlibrary(here)\nlibrary(openxlsx)\nlibrary(glue)\nlibrary(tidyr)\nlibrary(dplyr)\nlibrary(stringr)\nlibrary(showtext)"
  },
  {
    "objectID": "index.html#set-constants",
    "href": "index.html#set-constants",
    "title": "School Context Opportuntity Score",
    "section": "Set Constants",
    "text": "Set Constants\nConstants are values that are used across the entire R script. The following constants are set for later use:\n\n\nfocus_year is the year for the generation of the SCOscores;\n\nstate_3rd_proficiency is the statewide mean for the focus year of 3rd graders showing proficiency on the IREAD-3 standardized exam;\n\nstate_6th_proficiency is the statewide mean for the focus year of 6th graders meeting their growth targets on the math ILEARN standardized exam;\n\nstate_gpc is the statewide mean for the focus year of 12th graders who complete graduation requirements.\n\n\nfocus_year &lt;- 2023\nstate_3rd_proficiency &lt;- .816\nstate_6th_proficiency &lt;- .341\nstate_gpc &lt;- .864\n\nThese metrics are determined by the state on an annual basis and can be obtained from the Indiana Department of Education’s Indiana Graduates Prepared to Succeed website.\nThey should be updated each year."
  },
  {
    "objectID": "index.html#define-functions",
    "href": "index.html#define-functions",
    "title": "School Context Opportuntity Score",
    "section": "Define Functions",
    "text": "Define Functions\nFunctions provide “shortcodes” for repeating calculations or analyses multiple times with different variables, datasets, or networks.\nThe prune_frame function removes any rows with missing values (NA). This function also filters out private, charter, and other schools that are not required to submit data to the Indiana Department of Education, nor are they accountable to the communities they serve.\n\nprune_frame &lt;- function(working_frame) {\n  working_frame |&gt;\n    # Remove NA's\n    na.omit() |&gt;\n    # Keep only public schools\n    filter(corp_id %in% crosswalk_frame$corp_id)\n}\n\nThe set_numeric_ids function sets the School Corporation ID and School ID columns as numeric for consistency, so that all IDs in all dataframes are set consistently.\n\nset_numeric_ids &lt;- function(working_frame) {\n  working_frame |&gt;\n    # Set the School Corporation ID column to numeric\n    mutate(\n      corp_id = as.numeric(corp_id)\n    ) |&gt;\n    # Set the School ID column to numeric\n    mutate(\n      school_id = as.numeric(school_id)\n    )\n}"
  },
  {
    "objectID": "index.html#data-preparation",
    "href": "index.html#data-preparation",
    "title": "School Context Opportuntity Score",
    "section": "Data Preparation",
    "text": "Data Preparation\nBlah.\nIREAD-3 Test Scores\nBlah.\n\nGraduation Rates spreadsheet format.\n\ncorp_id\ncorp_name\nschool_id\nschool_name\niread_rate\n\n\nnumber\ntext\nnumber\ntext\npercent\n\nILEARN-6 Math Scores\nBlah.\n\nGraduation Rates spreadsheet format.\n\ncorp_id\ncorp_name\nschool_id\nschool_name\nilearn_rate\n\n\nnumber\ntext\nnumber\ntext\npercent\n\nHigh School Graduation Rates\n\nGraduation Rates spreadsheet format.\n\ncorp_id\ncorp_name\nschool_id\nschool_name\ngrad_rate\n\n\nnumber\ntext\nnumber\ntext\npercent"
  }
]